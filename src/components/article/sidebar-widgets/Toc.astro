---
---

<nav class="toc-nav -sidebar js-sidebar-toc-block">
  <div class="toc-sidebar"></div>
</nav>


<style is:global lang="scss">

.toc-nav.-sidebar {
  background-color: transparent;
  margin-top: 1.6rem!important;
  padding: 0;
  border: none;
}

.toc-sidebar {
  font-family: var.$font-base;

  .toc-list {
    margin-top: 0;

    .toc-list-item:first-child {
      .toc-link.node-name--H2 {
        margin-top: 0;
      }
    }
  }

  .toc-list-item {
    margin-top: 0!important;
  }

  .toc-link {
    position: relative;

    &::before {
      content: '';
      background-size: 100% 100%;
      background-position: left top;
      background-repeat: no-repeat;
      width: .2rem;
      height: 100%;
      position: absolute;
      left: 0;
      top: 0;
      opacity: 0;
      transition: all .3s;
      background-color: var.$c-main;
    }

    &.node-name--H2 {
      display: block;
      margin-top: .6rem;
      font-size: 1.3rem;
      font-weight: 600;
      padding-left: 0.8rem;
      padding: .4rem 1rem;
      line-height: 1.5;
    }

    &.node-name--H3 {
      display: block;
      font-size: 1.2rem;
      font-weight: 500;
      padding: .4rem 1rem;
      line-height: 1.5;
    }

    &.is-active-pos {
      background-color: #f9f9fc;

      &::before {
        opacity: 1;
      }
    }
  } 
}

.toc-btn {
  display: none;

  @include mixin.tab {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 4rem;
    height: 4rem;
    font-size: 1.8rem;
    background-color: var.$c-main-v;
    position: fixed;
    right: 1.6rem;
    bottom: 1.6rem;
    border-radius: 50%;
    color: var.$c-white;
    z-index: 1;
  }
}

.toc-icon {
  &:nth-child(1) {
    display: block;
  }

  &:nth-child(2) {
    display: none;
  }
}
</style>

<style is:global lang="scss">
  html:has([data-toc-is-active="true"]) {
    .toc-btn {
      display: flex;

      &__text {
        &:first-child {
          display: flex;
        }

        &:nth-child(2) {
          display: none;
        }
      }
    }

    .toc-icon {

      &:nth-child(1) {
        display: none;
      }

      &:nth-child(2) {
        display: flex;
      }
    }

    .sidebar__sticky {
      transform: translateX(0);
    }
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {

    if (document.querySelector('.js-toggle-toc')) {
      const btn = document.querySelector('.js-toggle-toc');
      const sidebarBlock = document.querySelector('.js-sidebar-sticky');

      // 初期状態がない場合に設定
      if (!sidebarBlock.dataset.tocIsActive) {
        sidebarBlock.dataset.tocIsActive = 'false';
      }

      btn.addEventListener('click', () => {
        // 現在の状態を論理値に変換
        let isActive = sidebarBlock.dataset.tocIsActive === 'true';
        
        // 開閉状態を反転
        sidebarBlock.dataset.tocIsActive = (!isActive).toString();
        
        // 開閉に合わせた処理（クラス追加などが必要な場合）
        if (sidebarBlock.dataset.tocIsActive === 'true') {
          sidebarBlock.classList.add('active'); // 例: 開いた状態にクラスを追加
        } else {
          sidebarBlock.classList.remove('active'); // 例: 閉じた状態にクラスを削除
        }

        // デバッグ用（必要に応じて削除）
        console.log(`TOC Active State: ${sidebarBlock.dataset.tocIsActive}`);
      });

      sidebarBlock.addEventListener('click', (e) => {
        // `toc-link` のクリックで閉じる
        if (e.target.classList.contains('toc-link')) {
          sidebarBlock.dataset.tocIsActive = 'false';
          sidebarBlock.classList.remove('active'); // 閉じる処理

          // デバッグ用（必要に応じて削除）
          console.log('TOC closed due to link click');
        }
      });
    }
  })
</script>